// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: routing_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "routing_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace routing {
class TopicConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TopicConfig>
     _instance;
} _TopicConfig_default_instance_;
class RoutingConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RoutingConfig>
     _instance;
} _RoutingConfig_default_instance_;

namespace protobuf_routing_5fconfig_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicConfig, routing_response_topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicConfig, routing_response_history_topic_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutingConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutingConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutingConfig, base_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutingConfig, left_turn_penalty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutingConfig, right_turn_penalty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutingConfig, uturn_penalty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutingConfig, change_penalty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutingConfig, base_changing_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutingConfig, topic_config_),
  1,
  2,
  3,
  4,
  5,
  6,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(TopicConfig)},
  { 9, 21, sizeof(RoutingConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TopicConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoutingConfig_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "routing_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TopicConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TopicConfig_default_instance_);_RoutingConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RoutingConfig_default_instance_);_RoutingConfig_default_instance_._instance.get_mutable()->topic_config_ = const_cast< ::apollo::routing::TopicConfig*>(
      ::apollo::routing::TopicConfig::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024routing_config.proto\022\016apollo.routing\"U"
      "\n\013TopicConfig\022\036\n\026routing_response_topic\030"
      "\001 \001(\t\022&\n\036routing_response_history_topic\030"
      "\002 \001(\t\"\332\001\n\rRoutingConfig\022\022\n\nbase_speed\030\001 "
      "\001(\001\022\031\n\021left_turn_penalty\030\002 \001(\001\022\032\n\022right_"
      "turn_penalty\030\003 \001(\001\022\025\n\ruturn_penalty\030\004 \001("
      "\001\022\026\n\016change_penalty\030\005 \001(\001\022\034\n\024base_changi"
      "ng_length\030\006 \001(\001\0221\n\014topic_config\030\007 \001(\0132\033."
      "apollo.routing.TopicConfig"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 346);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "routing_config.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_routing_5fconfig_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicConfig::kRoutingResponseTopicFieldNumber;
const int TopicConfig::kRoutingResponseHistoryTopicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicConfig::TopicConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_routing_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.routing.TopicConfig)
}
TopicConfig::TopicConfig(const TopicConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  routing_response_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_routing_response_topic()) {
    routing_response_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.routing_response_topic_);
  }
  routing_response_history_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_routing_response_history_topic()) {
    routing_response_history_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.routing_response_history_topic_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.routing.TopicConfig)
}

void TopicConfig::SharedCtor() {
  _cached_size_ = 0;
  routing_response_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routing_response_history_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TopicConfig::~TopicConfig() {
  // @@protoc_insertion_point(destructor:apollo.routing.TopicConfig)
  SharedDtor();
}

void TopicConfig::SharedDtor() {
  routing_response_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routing_response_history_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TopicConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopicConfig::descriptor() {
  protobuf_routing_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_routing_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicConfig& TopicConfig::default_instance() {
  protobuf_routing_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

TopicConfig* TopicConfig::New(::google::protobuf::Arena* arena) const {
  TopicConfig* n = new TopicConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopicConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.routing.TopicConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!routing_response_topic_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*routing_response_topic_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!routing_response_history_topic_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*routing_response_history_topic_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopicConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.routing.TopicConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string routing_response_topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_routing_response_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->routing_response_topic().data(), static_cast<int>(this->routing_response_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.routing.TopicConfig.routing_response_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string routing_response_history_topic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_routing_response_history_topic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->routing_response_history_topic().data(), static_cast<int>(this->routing_response_history_topic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.routing.TopicConfig.routing_response_history_topic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.routing.TopicConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.routing.TopicConfig)
  return false;
#undef DO_
}

void TopicConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.routing.TopicConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string routing_response_topic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->routing_response_topic().data(), static_cast<int>(this->routing_response_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.routing.TopicConfig.routing_response_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->routing_response_topic(), output);
  }

  // optional string routing_response_history_topic = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->routing_response_history_topic().data(), static_cast<int>(this->routing_response_history_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.routing.TopicConfig.routing_response_history_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->routing_response_history_topic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.routing.TopicConfig)
}

::google::protobuf::uint8* TopicConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.routing.TopicConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string routing_response_topic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->routing_response_topic().data(), static_cast<int>(this->routing_response_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.routing.TopicConfig.routing_response_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->routing_response_topic(), target);
  }

  // optional string routing_response_history_topic = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->routing_response_history_topic().data(), static_cast<int>(this->routing_response_history_topic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.routing.TopicConfig.routing_response_history_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->routing_response_history_topic(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.routing.TopicConfig)
  return target;
}

size_t TopicConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.routing.TopicConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string routing_response_topic = 1;
    if (has_routing_response_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->routing_response_topic());
    }

    // optional string routing_response_history_topic = 2;
    if (has_routing_response_history_topic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->routing_response_history_topic());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopicConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.routing.TopicConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.routing.TopicConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.routing.TopicConfig)
    MergeFrom(*source);
  }
}

void TopicConfig::MergeFrom(const TopicConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.routing.TopicConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_routing_response_topic();
      routing_response_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.routing_response_topic_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_routing_response_history_topic();
      routing_response_history_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.routing_response_history_topic_);
    }
  }
}

void TopicConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.routing.TopicConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicConfig::CopyFrom(const TopicConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.routing.TopicConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicConfig::IsInitialized() const {
  return true;
}

void TopicConfig::Swap(TopicConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicConfig::InternalSwap(TopicConfig* other) {
  using std::swap;
  routing_response_topic_.Swap(&other->routing_response_topic_);
  routing_response_history_topic_.Swap(&other->routing_response_history_topic_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopicConfig::GetMetadata() const {
  protobuf_routing_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_routing_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopicConfig

// optional string routing_response_topic = 1;
bool TopicConfig::has_routing_response_topic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TopicConfig::set_has_routing_response_topic() {
  _has_bits_[0] |= 0x00000001u;
}
void TopicConfig::clear_has_routing_response_topic() {
  _has_bits_[0] &= ~0x00000001u;
}
void TopicConfig::clear_routing_response_topic() {
  routing_response_topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_routing_response_topic();
}
const ::std::string& TopicConfig::routing_response_topic() const {
  // @@protoc_insertion_point(field_get:apollo.routing.TopicConfig.routing_response_topic)
  return routing_response_topic_.GetNoArena();
}
void TopicConfig::set_routing_response_topic(const ::std::string& value) {
  set_has_routing_response_topic();
  routing_response_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.routing.TopicConfig.routing_response_topic)
}
#if LANG_CXX11
void TopicConfig::set_routing_response_topic(::std::string&& value) {
  set_has_routing_response_topic();
  routing_response_topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.routing.TopicConfig.routing_response_topic)
}
#endif
void TopicConfig::set_routing_response_topic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_routing_response_topic();
  routing_response_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.routing.TopicConfig.routing_response_topic)
}
void TopicConfig::set_routing_response_topic(const char* value, size_t size) {
  set_has_routing_response_topic();
  routing_response_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.routing.TopicConfig.routing_response_topic)
}
::std::string* TopicConfig::mutable_routing_response_topic() {
  set_has_routing_response_topic();
  // @@protoc_insertion_point(field_mutable:apollo.routing.TopicConfig.routing_response_topic)
  return routing_response_topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TopicConfig::release_routing_response_topic() {
  // @@protoc_insertion_point(field_release:apollo.routing.TopicConfig.routing_response_topic)
  clear_has_routing_response_topic();
  return routing_response_topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TopicConfig::set_allocated_routing_response_topic(::std::string* routing_response_topic) {
  if (routing_response_topic != NULL) {
    set_has_routing_response_topic();
  } else {
    clear_has_routing_response_topic();
  }
  routing_response_topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), routing_response_topic);
  // @@protoc_insertion_point(field_set_allocated:apollo.routing.TopicConfig.routing_response_topic)
}

// optional string routing_response_history_topic = 2;
bool TopicConfig::has_routing_response_history_topic() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TopicConfig::set_has_routing_response_history_topic() {
  _has_bits_[0] |= 0x00000002u;
}
void TopicConfig::clear_has_routing_response_history_topic() {
  _has_bits_[0] &= ~0x00000002u;
}
void TopicConfig::clear_routing_response_history_topic() {
  routing_response_history_topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_routing_response_history_topic();
}
const ::std::string& TopicConfig::routing_response_history_topic() const {
  // @@protoc_insertion_point(field_get:apollo.routing.TopicConfig.routing_response_history_topic)
  return routing_response_history_topic_.GetNoArena();
}
void TopicConfig::set_routing_response_history_topic(const ::std::string& value) {
  set_has_routing_response_history_topic();
  routing_response_history_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.routing.TopicConfig.routing_response_history_topic)
}
#if LANG_CXX11
void TopicConfig::set_routing_response_history_topic(::std::string&& value) {
  set_has_routing_response_history_topic();
  routing_response_history_topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.routing.TopicConfig.routing_response_history_topic)
}
#endif
void TopicConfig::set_routing_response_history_topic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_routing_response_history_topic();
  routing_response_history_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.routing.TopicConfig.routing_response_history_topic)
}
void TopicConfig::set_routing_response_history_topic(const char* value, size_t size) {
  set_has_routing_response_history_topic();
  routing_response_history_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.routing.TopicConfig.routing_response_history_topic)
}
::std::string* TopicConfig::mutable_routing_response_history_topic() {
  set_has_routing_response_history_topic();
  // @@protoc_insertion_point(field_mutable:apollo.routing.TopicConfig.routing_response_history_topic)
  return routing_response_history_topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TopicConfig::release_routing_response_history_topic() {
  // @@protoc_insertion_point(field_release:apollo.routing.TopicConfig.routing_response_history_topic)
  clear_has_routing_response_history_topic();
  return routing_response_history_topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TopicConfig::set_allocated_routing_response_history_topic(::std::string* routing_response_history_topic) {
  if (routing_response_history_topic != NULL) {
    set_has_routing_response_history_topic();
  } else {
    clear_has_routing_response_history_topic();
  }
  routing_response_history_topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), routing_response_history_topic);
  // @@protoc_insertion_point(field_set_allocated:apollo.routing.TopicConfig.routing_response_history_topic)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoutingConfig::kBaseSpeedFieldNumber;
const int RoutingConfig::kLeftTurnPenaltyFieldNumber;
const int RoutingConfig::kRightTurnPenaltyFieldNumber;
const int RoutingConfig::kUturnPenaltyFieldNumber;
const int RoutingConfig::kChangePenaltyFieldNumber;
const int RoutingConfig::kBaseChangingLengthFieldNumber;
const int RoutingConfig::kTopicConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoutingConfig::RoutingConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_routing_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.routing.RoutingConfig)
}
RoutingConfig::RoutingConfig(const RoutingConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_topic_config()) {
    topic_config_ = new ::apollo::routing::TopicConfig(*from.topic_config_);
  } else {
    topic_config_ = NULL;
  }
  ::memcpy(&base_speed_, &from.base_speed_,
    static_cast<size_t>(reinterpret_cast<char*>(&base_changing_length_) -
    reinterpret_cast<char*>(&base_speed_)) + sizeof(base_changing_length_));
  // @@protoc_insertion_point(copy_constructor:apollo.routing.RoutingConfig)
}

void RoutingConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&topic_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&base_changing_length_) -
      reinterpret_cast<char*>(&topic_config_)) + sizeof(base_changing_length_));
}

RoutingConfig::~RoutingConfig() {
  // @@protoc_insertion_point(destructor:apollo.routing.RoutingConfig)
  SharedDtor();
}

void RoutingConfig::SharedDtor() {
  if (this != internal_default_instance()) delete topic_config_;
}

void RoutingConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoutingConfig::descriptor() {
  protobuf_routing_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_routing_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoutingConfig& RoutingConfig::default_instance() {
  protobuf_routing_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoutingConfig* RoutingConfig::New(::google::protobuf::Arena* arena) const {
  RoutingConfig* n = new RoutingConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoutingConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.routing.RoutingConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_topic_config()) {
    GOOGLE_DCHECK(topic_config_ != NULL);
    topic_config_->::apollo::routing::TopicConfig::Clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 126u) {
    ::memset(&base_speed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&base_changing_length_) -
        reinterpret_cast<char*>(&base_speed_)) + sizeof(base_changing_length_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoutingConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.routing.RoutingConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double base_speed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_base_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &base_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double left_turn_penalty = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_left_turn_penalty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_turn_penalty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double right_turn_penalty = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_right_turn_penalty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_turn_penalty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double uturn_penalty = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_uturn_penalty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &uturn_penalty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double change_penalty = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_change_penalty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &change_penalty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double base_changing_length = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_base_changing_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &base_changing_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.routing.TopicConfig topic_config = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_topic_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.routing.RoutingConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.routing.RoutingConfig)
  return false;
#undef DO_
}

void RoutingConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.routing.RoutingConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double base_speed = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->base_speed(), output);
  }

  // optional double left_turn_penalty = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->left_turn_penalty(), output);
  }

  // optional double right_turn_penalty = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->right_turn_penalty(), output);
  }

  // optional double uturn_penalty = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->uturn_penalty(), output);
  }

  // optional double change_penalty = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->change_penalty(), output);
  }

  // optional double base_changing_length = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->base_changing_length(), output);
  }

  // optional .apollo.routing.TopicConfig topic_config = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->topic_config_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.routing.RoutingConfig)
}

::google::protobuf::uint8* RoutingConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.routing.RoutingConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double base_speed = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->base_speed(), target);
  }

  // optional double left_turn_penalty = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->left_turn_penalty(), target);
  }

  // optional double right_turn_penalty = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->right_turn_penalty(), target);
  }

  // optional double uturn_penalty = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->uturn_penalty(), target);
  }

  // optional double change_penalty = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->change_penalty(), target);
  }

  // optional double base_changing_length = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->base_changing_length(), target);
  }

  // optional .apollo.routing.TopicConfig topic_config = 7;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->topic_config_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.routing.RoutingConfig)
  return target;
}

size_t RoutingConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.routing.RoutingConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional .apollo.routing.TopicConfig topic_config = 7;
    if (has_topic_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->topic_config_);
    }

    // optional double base_speed = 1;
    if (has_base_speed()) {
      total_size += 1 + 8;
    }

    // optional double left_turn_penalty = 2;
    if (has_left_turn_penalty()) {
      total_size += 1 + 8;
    }

    // optional double right_turn_penalty = 3;
    if (has_right_turn_penalty()) {
      total_size += 1 + 8;
    }

    // optional double uturn_penalty = 4;
    if (has_uturn_penalty()) {
      total_size += 1 + 8;
    }

    // optional double change_penalty = 5;
    if (has_change_penalty()) {
      total_size += 1 + 8;
    }

    // optional double base_changing_length = 6;
    if (has_base_changing_length()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoutingConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.routing.RoutingConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const RoutingConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoutingConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.routing.RoutingConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.routing.RoutingConfig)
    MergeFrom(*source);
  }
}

void RoutingConfig::MergeFrom(const RoutingConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.routing.RoutingConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_topic_config()->::apollo::routing::TopicConfig::MergeFrom(from.topic_config());
    }
    if (cached_has_bits & 0x00000002u) {
      base_speed_ = from.base_speed_;
    }
    if (cached_has_bits & 0x00000004u) {
      left_turn_penalty_ = from.left_turn_penalty_;
    }
    if (cached_has_bits & 0x00000008u) {
      right_turn_penalty_ = from.right_turn_penalty_;
    }
    if (cached_has_bits & 0x00000010u) {
      uturn_penalty_ = from.uturn_penalty_;
    }
    if (cached_has_bits & 0x00000020u) {
      change_penalty_ = from.change_penalty_;
    }
    if (cached_has_bits & 0x00000040u) {
      base_changing_length_ = from.base_changing_length_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RoutingConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.routing.RoutingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoutingConfig::CopyFrom(const RoutingConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.routing.RoutingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoutingConfig::IsInitialized() const {
  return true;
}

void RoutingConfig::Swap(RoutingConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoutingConfig::InternalSwap(RoutingConfig* other) {
  using std::swap;
  swap(topic_config_, other->topic_config_);
  swap(base_speed_, other->base_speed_);
  swap(left_turn_penalty_, other->left_turn_penalty_);
  swap(right_turn_penalty_, other->right_turn_penalty_);
  swap(uturn_penalty_, other->uturn_penalty_);
  swap(change_penalty_, other->change_penalty_);
  swap(base_changing_length_, other->base_changing_length_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoutingConfig::GetMetadata() const {
  protobuf_routing_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_routing_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoutingConfig

// optional double base_speed = 1;
bool RoutingConfig::has_base_speed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoutingConfig::set_has_base_speed() {
  _has_bits_[0] |= 0x00000002u;
}
void RoutingConfig::clear_has_base_speed() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoutingConfig::clear_base_speed() {
  base_speed_ = 0;
  clear_has_base_speed();
}
double RoutingConfig::base_speed() const {
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.base_speed)
  return base_speed_;
}
void RoutingConfig::set_base_speed(double value) {
  set_has_base_speed();
  base_speed_ = value;
  // @@protoc_insertion_point(field_set:apollo.routing.RoutingConfig.base_speed)
}

// optional double left_turn_penalty = 2;
bool RoutingConfig::has_left_turn_penalty() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoutingConfig::set_has_left_turn_penalty() {
  _has_bits_[0] |= 0x00000004u;
}
void RoutingConfig::clear_has_left_turn_penalty() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoutingConfig::clear_left_turn_penalty() {
  left_turn_penalty_ = 0;
  clear_has_left_turn_penalty();
}
double RoutingConfig::left_turn_penalty() const {
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.left_turn_penalty)
  return left_turn_penalty_;
}
void RoutingConfig::set_left_turn_penalty(double value) {
  set_has_left_turn_penalty();
  left_turn_penalty_ = value;
  // @@protoc_insertion_point(field_set:apollo.routing.RoutingConfig.left_turn_penalty)
}

// optional double right_turn_penalty = 3;
bool RoutingConfig::has_right_turn_penalty() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoutingConfig::set_has_right_turn_penalty() {
  _has_bits_[0] |= 0x00000008u;
}
void RoutingConfig::clear_has_right_turn_penalty() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoutingConfig::clear_right_turn_penalty() {
  right_turn_penalty_ = 0;
  clear_has_right_turn_penalty();
}
double RoutingConfig::right_turn_penalty() const {
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.right_turn_penalty)
  return right_turn_penalty_;
}
void RoutingConfig::set_right_turn_penalty(double value) {
  set_has_right_turn_penalty();
  right_turn_penalty_ = value;
  // @@protoc_insertion_point(field_set:apollo.routing.RoutingConfig.right_turn_penalty)
}

// optional double uturn_penalty = 4;
bool RoutingConfig::has_uturn_penalty() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RoutingConfig::set_has_uturn_penalty() {
  _has_bits_[0] |= 0x00000010u;
}
void RoutingConfig::clear_has_uturn_penalty() {
  _has_bits_[0] &= ~0x00000010u;
}
void RoutingConfig::clear_uturn_penalty() {
  uturn_penalty_ = 0;
  clear_has_uturn_penalty();
}
double RoutingConfig::uturn_penalty() const {
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.uturn_penalty)
  return uturn_penalty_;
}
void RoutingConfig::set_uturn_penalty(double value) {
  set_has_uturn_penalty();
  uturn_penalty_ = value;
  // @@protoc_insertion_point(field_set:apollo.routing.RoutingConfig.uturn_penalty)
}

// optional double change_penalty = 5;
bool RoutingConfig::has_change_penalty() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RoutingConfig::set_has_change_penalty() {
  _has_bits_[0] |= 0x00000020u;
}
void RoutingConfig::clear_has_change_penalty() {
  _has_bits_[0] &= ~0x00000020u;
}
void RoutingConfig::clear_change_penalty() {
  change_penalty_ = 0;
  clear_has_change_penalty();
}
double RoutingConfig::change_penalty() const {
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.change_penalty)
  return change_penalty_;
}
void RoutingConfig::set_change_penalty(double value) {
  set_has_change_penalty();
  change_penalty_ = value;
  // @@protoc_insertion_point(field_set:apollo.routing.RoutingConfig.change_penalty)
}

// optional double base_changing_length = 6;
bool RoutingConfig::has_base_changing_length() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RoutingConfig::set_has_base_changing_length() {
  _has_bits_[0] |= 0x00000040u;
}
void RoutingConfig::clear_has_base_changing_length() {
  _has_bits_[0] &= ~0x00000040u;
}
void RoutingConfig::clear_base_changing_length() {
  base_changing_length_ = 0;
  clear_has_base_changing_length();
}
double RoutingConfig::base_changing_length() const {
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.base_changing_length)
  return base_changing_length_;
}
void RoutingConfig::set_base_changing_length(double value) {
  set_has_base_changing_length();
  base_changing_length_ = value;
  // @@protoc_insertion_point(field_set:apollo.routing.RoutingConfig.base_changing_length)
}

// optional .apollo.routing.TopicConfig topic_config = 7;
bool RoutingConfig::has_topic_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoutingConfig::set_has_topic_config() {
  _has_bits_[0] |= 0x00000001u;
}
void RoutingConfig::clear_has_topic_config() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoutingConfig::clear_topic_config() {
  if (topic_config_ != NULL) topic_config_->::apollo::routing::TopicConfig::Clear();
  clear_has_topic_config();
}
const ::apollo::routing::TopicConfig& RoutingConfig::topic_config() const {
  const ::apollo::routing::TopicConfig* p = topic_config_;
  // @@protoc_insertion_point(field_get:apollo.routing.RoutingConfig.topic_config)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::routing::TopicConfig*>(
      &::apollo::routing::_TopicConfig_default_instance_);
}
::apollo::routing::TopicConfig* RoutingConfig::mutable_topic_config() {
  set_has_topic_config();
  if (topic_config_ == NULL) {
    topic_config_ = new ::apollo::routing::TopicConfig;
  }
  // @@protoc_insertion_point(field_mutable:apollo.routing.RoutingConfig.topic_config)
  return topic_config_;
}
::apollo::routing::TopicConfig* RoutingConfig::release_topic_config() {
  // @@protoc_insertion_point(field_release:apollo.routing.RoutingConfig.topic_config)
  clear_has_topic_config();
  ::apollo::routing::TopicConfig* temp = topic_config_;
  topic_config_ = NULL;
  return temp;
}
void RoutingConfig::set_allocated_topic_config(::apollo::routing::TopicConfig* topic_config) {
  delete topic_config_;
  topic_config_ = topic_config;
  if (topic_config) {
    set_has_topic_config();
  } else {
    clear_has_topic_config();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.routing.RoutingConfig.topic_config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace routing
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
